{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "name": "NFTMarketPlace__AlreadyListed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NFTMarketPlace__CannotSellZeroPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NFTMarketPlace__CannotWithdrawZeroEth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NFTMarketPlace__NFTCannotApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NFTMarketPlace__NotAOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NFTMarketPlace__NotEnougMoneyToMintNft",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NFTMarketPlace__NotListed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NFTMarketPlace__TransferedFail",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "NftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "NftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ItemCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "NftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "NftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "ItemUpdate",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "NftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ListingCancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "NftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "ListingUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "NftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "NftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getListed",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFTMarketPlace.Listing",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "getProceed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "NftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x14fed504ec42bca270bcb364a1412d0be5afba5be519ccc22ef473078ab6d51e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1243787",
    "logsBloom": "0x
    "blockHash": "0x659c20b0a6d6e2f9c113a0ba37ca45059935db995b9ca692d03293a5efb5f4ba",
    "transactionHash": "0x14fed504ec42bca270bcb364a1412d0be5afba5be519ccc22ef473078ab6d51e",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1243787",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cdc8f7855167bbb3ef4f15537421d934",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NFTMarketPlace__AlreadyListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTMarketPlace__CannotSellZeroPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTMarketPlace__CannotWithdrawZeroEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTMarketPlace__NFTCannotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTMarketPlace__NotAOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTMarketPlace__NotEnougMoneyToMintNft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTMarketPlace__NotListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTMarketPlace__TransferedFail\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"NftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ItemCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"NftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"ItemUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ListingCancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"ListingUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getListed\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTMarketPlace.Listing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getProceed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ItemListed(address,address,uint256,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMarketPlace.sol\":\"NFTMarketPlace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/NFTMarketPlace.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\nerror NFTMarketPlace__CannotSellZeroPrice();\\nerror NFTMarketPlace__NFTCannotApproved();\\nerror NFTMarketPlace__AlreadyListed();\\nerror NFTMarketPlace__NotAOwner();\\nerror NFTMarketPlace__NotListed();\\nerror NFTMarketPlace__NotEnougMoneyToMintNft();\\nerror NFTMarketPlace__CannotWithdrawZeroEth();\\nerror NFTMarketPlace__TransferedFail();\\n\\ncontract NFTMarketPlace {\\n    //Structs\\n    struct Listing{\\n    address seller;\\n    uint256 price;\\n    }\\n\\n    //Modifier\\n    modifier NotListed(address NftAddress,uint256 tokenId,address owner\\n    ) {\\n        Listing memory listing = s_listings[NftAddress][tokenId];\\n        if(listing.price > 0){\\n            revert NFTMarketPlace__AlreadyListed();\\n        }\\n        _;\\n\\n    }\\n\\n    modifier IsOwner(address NftAddress,uint256 tokenId,address spender)\\n    {\\n         IERC721 nft = IERC721(NftAddress);\\n         address owner = nft.ownerOf(tokenId);\\n         if(spender != owner){\\n            revert NFTMarketPlace__NotAOwner();\\n         }\\n\\n        _;\\n    }\\n\\n    modifier IsListed(address nftAdress,uint256 tokenId) {\\n        Listing memory listing = s_listings[nftAdress][tokenId];\\n        if(listing.price <= 0){\\n            revert NFTMarketPlace__NotListed();\\n        }\\n        _;\\n    }\\n    ///Events\\n    event ItemListed(address indexed NftAddress, address indexed sender, uint256 tokenId, uint256 price);\\n    event ItemBought(address indexed NftAddress, address indexed sender, uint256 tokenId, uint256 price);\\n    event ItemCanceled(address NftAddress,uint256 tokenId);\\n    event ItemUpdate(address NftAddress,uint256 tokenId,uint256 newPrice);\\n    //variables\\n    mapping (address => mapping(uint256 => Listing)) private s_listings;\\n    mapping (address => uint256) private s_proceed;\\n\\n    function listItem (\\n    address NftAddress,\\n    uint256 tokenId,\\n    uint256 price\\n    )external\\n    NotListed(NftAddress,tokenId,msg.sender)\\n    IsOwner(NftAddress,tokenId,msg.sender)\\n    {\\n\\n       if(price <= 0){\\n        revert NFTMarketPlace__CannotSellZeroPrice();\\n         }\\n\\n       IERC721 nft = IERC721(NftAddress);\\n       if(nft.getApproved(tokenId) != address(this)){\\n        revert NFTMarketPlace__NFTCannotApproved();\\n       }\\n\\n       s_listings[NftAddress][tokenId] = Listing(msg.sender,price);\\n       emit ItemListed(NftAddress,msg.sender,tokenId,price);\\n    }\\n\\n    function buyItem(address NftAddress,uint256 tokenId) external payable \\n    IsListed(NftAddress,tokenId)\\n    {\\n        Listing memory itemListed  = s_listings[NftAddress][tokenId];\\n\\n        if(msg.value < itemListed.price){\\n            revert NFTMarketPlace__NotEnougMoneyToMintNft();\\n        }\\n        s_proceed[itemListed.seller] = s_proceed[itemListed.seller] + msg.value;\\n        delete(s_listings[NftAddress][tokenId]);\\n\\n        IERC721(NftAddress).safeTransferFrom(itemListed.seller,msg.sender,tokenId);\\n\\n        emit ItemBought(NftAddress,msg.sender,tokenId,itemListed.price);\\n    }\\n\\n    function ListingCancel(address NftAddress,uint256 tokenId) external \\n    IsOwner(NftAddress,tokenId,msg.sender)\\n    IsListed(NftAddress,tokenId)\\n    {\\n        delete(s_listings[NftAddress][tokenId]);\\n        emit ItemCanceled(NftAddress,tokenId);\\n    }\\n\\n    function ListingUpdate(address NftAddress,uint256 tokenId,uint256 newPrice) external \\n    IsOwner(NftAddress,tokenId,msg.sender)\\n    IsListed(NftAddress,tokenId){\\n        s_listings[NftAddress][tokenId].price = newPrice;\\n        emit ItemUpdate(NftAddress,tokenId,newPrice);\\n    }\\n\\n    function withdrawProceeds() external {\\n        uint256 proceed =  s_proceed[msg.sender];\\n\\n        if(proceed <= 0){\\n            revert NFTMarketPlace__CannotWithdrawZeroEth();\\n        }\\n\\n        s_proceed[msg.sender] = 0;\\n\\n        (bool success, ) = payable(msg.sender).call{value:proceed}('');\\n\\n        if(!success){\\n            revert NFTMarketPlace__TransferedFail();\\n        }\\n    }\\n\\n\\n    function getListed(address NftAddress, uint256 tokenId) external view returns(Listing memory){\\n        return s_listings[NftAddress][tokenId];\\n    }\\n\\n    function getProceed(address seller) external view returns (uint256){\\n        return s_proceed[seller];\\n    }\\n}\",\"keccak256\":\"0x7550bf02500770b5b29e9b23e29cf1a92b3835be713b0f7549065eec39bbe669\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061159f806100206000396000f3fe6080604052600436106100705760003560e01c80639038e6931161004e5780639038e693146100f05780639f37092a14610107578063a24d3c7914610123578063cd6a20dc1461016057610070565b80633465055014610075578063598703181461009e57806389bfd38f146100c7575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061125d565b61019d565b005b3480156100aa57600080fd5b506100c560048036038101906100c091906112b0565b610425565b005b3480156100d357600080fd5b506100ee60048036038101906100e9919061125d565b6106d4565b005b3480156100fc57600080fd5b50610105610b20565b005b610121600480360381019061011c91906112b0565b610c8a565b005b34801561012f57600080fd5b5061014a600480360381019061014591906112f0565b611081565b604051610157919061132c565b60405180910390f35b34801561016c57600080fd5b50610187600480360381019061018291906112b0565b6110ca565b6040516101949190611394565b60405180910390f35b828233600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016101e0919061132c565b602060405180830381865afa1580156101fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022191906113c4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610288576040517f3bcdcc6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878760008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816020015111610386576040517f2fbdc85b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886000808d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c8152602001908152602001600020600101819055507f6eca2f79cd91ff66596fe050084ab3b06639f0282e9461517828b11b1af198b88b8b8b60405161041093929190611400565b60405180910390a15050505050505050505050565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610468919061132c565b602060405180830381865afa158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a991906113c4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610510576040517f3bcdcc6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868660008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050600081602001511161060e576040517f2fbdc85b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a8152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550507ff86e54241e209ee4b38db8e64af9614b083d18f23c32f3293c8a87c6b8bf89438a8a6040516106c0929190611437565b60405180910390a150505050505050505050565b82823360008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816020015111156107d4576040517f92b9cf2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868633600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610817919061132c565b602060405180830381865afa158015610834573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085891906113c4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146108bf576040517f3bcdcc6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a116108f9576040517fd42a7d6900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008c90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e6040518263ffffffff1660e01b815260040161094e919061132c565b602060405180830381865afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f91906113c4565b73ffffffffffffffffffffffffffffffffffffffff16146109dc576040517fcaaf0ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018c8152506000808f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050503373ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48e8e604051610b09929190611460565b60405180910390a350505050505050505050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610b9e576040517f07f0378000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610c09906114ba565b60006040518083038185875af1925050503d8060008114610c46576040519150601f19603f3d011682016040523d82523d6000602084013e610c4b565b606091505b5050905080610c86576040517f0d8412a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816020015111610d88576040517f2fbdc85b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508060200151341015610e84576040517f78c3ac3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ed391906114fe565b60016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550508573ffffffffffffffffffffffffffffffffffffffff166342842e0e826000015133886040518463ffffffff1660e01b8152600401610fdc93929190611532565b600060405180830381600087803b158015610ff657600080fd5b505af115801561100a573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f263223b1dd81e51054a4e6f791d45a4a1ddb4aadcd93a2dfd892615c3fdac187878460200151604051611071929190611460565b60405180910390a3505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6110d2611194565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905092915050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111f4826111c9565b9050919050565b611204816111e9565b811461120f57600080fd5b50565b600081359050611221816111fb565b92915050565b6000819050919050565b61123a81611227565b811461124557600080fd5b50565b60008135905061125781611231565b92915050565b600080600060608486031215611276576112756111c4565b5b600061128486828701611212565b935050602061129586828701611248565b92505060406112a686828701611248565b9150509250925092565b600080604083850312156112c7576112c66111c4565b5b60006112d585828601611212565b92505060206112e685828601611248565b9150509250929050565b600060208284031215611306576113056111c4565b5b600061131484828501611212565b91505092915050565b61132681611227565b82525050565b6000602082019050611341600083018461131d565b92915050565b611350816111e9565b82525050565b61135f81611227565b82525050565b60408201600082015161137b6000850182611347565b50602082015161138e6020850182611356565b50505050565b60006040820190506113a96000830184611365565b92915050565b6000815190506113be816111fb565b92915050565b6000602082840312156113da576113d96111c4565b5b60006113e8848285016113af565b91505092915050565b6113fa816111e9565b82525050565b600060608201905061141560008301866113f1565b611422602083018561131d565b61142f604083018461131d565b949350505050565b600060408201905061144c60008301856113f1565b611459602083018461131d565b9392505050565b6000604082019050611475600083018561131d565b611482602083018461131d565b9392505050565b600081905092915050565b50565b60006114a4600083611489565b91506114af82611494565b600082019050919050565b60006114c582611497565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061150982611227565b915061151483611227565b925082820190508082111561152c5761152b6114cf565b5b92915050565b600060608201905061154760008301866113f1565b61155460208301856113f1565b611561604083018461131d565b94935050505056fea26469706673582212201d1846313cb874cdb20fc3c9f64731c76cb2100fd33cf79bdd1359247ece816d64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80639038e6931161004e5780639038e693146100f05780639f37092a14610107578063a24d3c7914610123578063cd6a20dc1461016057610070565b80633465055014610075578063598703181461009e57806389bfd38f146100c7575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061125d565b61019d565b005b3480156100aa57600080fd5b506100c560048036038101906100c091906112b0565b610425565b005b3480156100d357600080fd5b506100ee60048036038101906100e9919061125d565b6106d4565b005b3480156100fc57600080fd5b50610105610b20565b005b610121600480360381019061011c91906112b0565b610c8a565b005b34801561012f57600080fd5b5061014a600480360381019061014591906112f0565b611081565b604051610157919061132c565b60405180910390f35b34801561016c57600080fd5b50610187600480360381019061018291906112b0565b6110ca565b6040516101949190611394565b60405180910390f35b828233600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016101e0919061132c565b602060405180830381865afa1580156101fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022191906113c4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610288576040517f3bcdcc6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878760008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816020015111610386576040517f2fbdc85b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886000808d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c8152602001908152602001600020600101819055507f6eca2f79cd91ff66596fe050084ab3b06639f0282e9461517828b11b1af198b88b8b8b60405161041093929190611400565b60405180910390a15050505050505050505050565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610468919061132c565b602060405180830381865afa158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a991906113c4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610510576040517f3bcdcc6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868660008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050600081602001511161060e576040517f2fbdc85b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a8152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550507ff86e54241e209ee4b38db8e64af9614b083d18f23c32f3293c8a87c6b8bf89438a8a6040516106c0929190611437565b60405180910390a150505050505050505050565b82823360008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816020015111156107d4576040517f92b9cf2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868633600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610817919061132c565b602060405180830381865afa158015610834573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085891906113c4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146108bf576040517f3bcdcc6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a116108f9576040517fd42a7d6900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008c90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e6040518263ffffffff1660e01b815260040161094e919061132c565b602060405180830381865afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f91906113c4565b73ffffffffffffffffffffffffffffffffffffffff16146109dc576040517fcaaf0ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018c8152506000808f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050503373ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48e8e604051610b09929190611460565b60405180910390a350505050505050505050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610b9e576040517f07f0378000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610c09906114ba565b60006040518083038185875af1925050503d8060008114610c46576040519150601f19603f3d011682016040523d82523d6000602084013e610c4b565b606091505b5050905080610c86576040517f0d8412a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816020015111610d88576040517f2fbdc85b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508060200151341015610e84576040517f78c3ac3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ed391906114fe565b60016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550508573ffffffffffffffffffffffffffffffffffffffff166342842e0e826000015133886040518463ffffffff1660e01b8152600401610fdc93929190611532565b600060405180830381600087803b158015610ff657600080fd5b505af115801561100a573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f263223b1dd81e51054a4e6f791d45a4a1ddb4aadcd93a2dfd892615c3fdac187878460200151604051611071929190611460565b60405180910390a3505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6110d2611194565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905092915050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111f4826111c9565b9050919050565b611204816111e9565b811461120f57600080fd5b50565b600081359050611221816111fb565b92915050565b6000819050919050565b61123a81611227565b811461124557600080fd5b50565b60008135905061125781611231565b92915050565b600080600060608486031215611276576112756111c4565b5b600061128486828701611212565b935050602061129586828701611248565b92505060406112a686828701611248565b9150509250925092565b600080604083850312156112c7576112c66111c4565b5b60006112d585828601611212565b92505060206112e685828601611248565b9150509250929050565b600060208284031215611306576113056111c4565b5b600061131484828501611212565b91505092915050565b61132681611227565b82525050565b6000602082019050611341600083018461131d565b92915050565b611350816111e9565b82525050565b61135f81611227565b82525050565b60408201600082015161137b6000850182611347565b50602082015161138e6020850182611356565b50505050565b60006040820190506113a96000830184611365565b92915050565b6000815190506113be816111fb565b92915050565b6000602082840312156113da576113d96111c4565b5b60006113e8848285016113af565b91505092915050565b6113fa816111e9565b82525050565b600060608201905061141560008301866113f1565b611422602083018561131d565b61142f604083018461131d565b949350505050565b600060408201905061144c60008301856113f1565b611459602083018461131d565b9392505050565b6000604082019050611475600083018561131d565b611482602083018461131d565b9392505050565b600081905092915050565b50565b60006114a4600083611489565b91506114af82611494565b600082019050919050565b60006114c582611497565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061150982611227565b915061151483611227565b925082820190508082111561152c5761152b6114cf565b5b92915050565b600060608201905061154760008301866113f1565b61155460208301856113f1565b611561604083018461131d565b94935050505056fea26469706673582212201d1846313cb874cdb20fc3c9f64731c76cb2100fd33cf79bdd1359247ece816d64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "ItemListed(address,address,uint256,uint256)": {
        "notice": "Events"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2727,
        "contract": "contracts/NFTMarketPlace.sol:NFTMarketPlace",
        "label": "s_listings",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)2599_storage))"
      },
      {
        "astId": 2731,
        "contract": "contracts/NFTMarketPlace.sol:NFTMarketPlace",
        "label": "s_proceed",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)2599_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NFTMarketPlace.Listing))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Listing)2599_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Listing)2599_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NFTMarketPlace.Listing)",
        "numberOfBytes": "32",
        "value": "t_struct(Listing)2599_storage"
      },
      "t_struct(Listing)2599_storage": {
        "encoding": "inplace",
        "label": "struct NFTMarketPlace.Listing",
        "members": [
          {
            "astId": 2596,
            "contract": "contracts/NFTMarketPlace.sol:NFTMarketPlace",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2598,
            "contract": "contracts/NFTMarketPlace.sol:NFTMarketPlace",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}